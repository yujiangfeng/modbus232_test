Component: ARM Compiler 5.06 update 1 (build 61) Tool: armlink [4d35a8]

==============================================================================

Section Cross References

    startup_stm32f10x_hd.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(RESET) refers to startup_stm32f10x_hd.o(.text) for Reset_Handler
    startup_stm32f10x_hd.o(RESET) refers to stm32f10x_it.o(.text) for TIM4_IRQHandler
    startup_stm32f10x_hd.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(.text) refers to startup_stm32f10x_hd.o(STACK) for __initial_sp
    startup_stm32f10x_hd.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_hd.o(.text) refers to startup_stm32f10x_hd.o(HEAP) for Heap_Mem
    system_stm32f10x.o(.text) refers to system_stm32f10x.o(.data) for SystemCoreClock
    stm32f10x_usart.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB2PeriphResetCmd
    stm32f10x_tim.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB2PeriphResetCmd
    stm32f10x_bkp.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_BackupResetCmd
    stm32f10x_rcc.o(.text) refers to stm32f10x_rcc.o(.data) for APBAHBPrescTable
    stm32f10x_gpio.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB2PeriphResetCmd
    main.o(.text) refers to mb.o(.text) for eMBInit
    stm32f10x_it.o(.text) refers to stm32f10x_tim.o(.text) for TIM_GetITStatus
    stm32f10x_it.o(.text) refers to stm32f10x_usart.o(.text) for USART_GetITStatus
    stm32f10x_it.o(.text) refers to portserial.o(.text) for prvvUARTRxISR
    mbascii.o(.text) refers to port.o(.text) for ENTER_CRITICAL_SECTION
    mbascii.o(.text) refers to portserial.o(.text) for xMBPortSerialInit
    mbascii.o(.text) refers to porttimer.o(.text) for xMBPortTimersInit
    mbascii.o(.text) refers to portevent.o(.text) for xMBPortEventPost
    mbascii.o(.text) refers to mbascii.o(.data) for ucMBLFCharacter
    mbascii.o(.data) refers to mbrtu.o(.bss) for ucRTUBuf
    mbfunccoils.o(.text) refers to port.o(.text) for eMBRegCoilsCB
    mbfunccoils.o(.text) refers to mbutils.o(.text) for prveMBError2Exception
    mbfuncdisc.o(.text) refers to port.o(.text) for eMBRegDiscreteCB
    mbfuncdisc.o(.text) refers to mbutils.o(.text) for prveMBError2Exception
    mbfuncholding.o(.text) refers to port.o(.text) for eMBRegHoldingCB
    mbfuncholding.o(.text) refers to mbutils.o(.text) for prveMBError2Exception
    mbfuncinput.o(.text) refers to port.o(.text) for eMBRegInputCB
    mbfuncinput.o(.text) refers to mbutils.o(.text) for prveMBError2Exception
    mbfuncother.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    mbfuncother.o(.text) refers to mbfuncother.o(.data) for usMBSlaveIDLen
    mbfuncother.o(.text) refers to mbfuncother.o(.bss) for ucMBSlaveID
    port.o(.text) refers to mbutils.o(.text) for xMBUtilGetBits
    port.o(.text) refers to port.o(.data) for usRegInputBuf
    portevent.o(.text) refers to portevent.o(.data) for xEventInQueue
    portserial.o(.text) refers to stm32f10x_usart.o(.text) for USART_ITConfig
    portserial.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB2PeriphClockCmd
    portserial.o(.text) refers to stm32f10x_gpio.o(.text) for GPIO_Init
    portserial.o(.text) refers to misc.o(.text) for NVIC_Init
    portserial.o(.text) refers to portserial.o(.data) for GPIO_InitStructure
    portserial.o(.text) refers to portserial.o(.bss) for USART_InitStructure
    portserial.o(.text) refers to mb.o(.data) for pxMBFrameCBTransmitterEmpty
    porttimer.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB1PeriphClockCmd
    porttimer.o(.text) refers to stm32f10x_tim.o(.text) for TIM_TimeBaseInit
    porttimer.o(.text) refers to misc.o(.text) for NVIC_PriorityGroupConfig
    mbcrc.o(.text) refers to mbcrc.o(.constdata) for aucCRCHi
    mbrtu.o(.text) refers to port.o(.text) for ENTER_CRITICAL_SECTION
    mbrtu.o(.text) refers to portserial.o(.text) for xMBPortSerialInit
    mbrtu.o(.text) refers to porttimer.o(.text) for xMBPortTimersInit
    mbrtu.o(.text) refers to mbcrc.o(.text) for usMBCRC16
    mbrtu.o(.text) refers to portevent.o(.text) for xMBPortEventPost
    mbrtu.o(.text) refers to mbrtu.o(.data) for eRcvState
    mbrtu.o(.text) refers to mbrtu.o(.bss) for ucRTUBuf
    mb.o(.text) refers to mbrtu.o(.text) for eMBRTUInit
    mb.o(.text) refers to mbascii.o(.text) for eMBASCIIInit
    mb.o(.text) refers to portevent.o(.text) for xMBPortEventInit
    mb.o(.text) refers to port.o(.text) for ENTER_CRITICAL_SECTION
    mb.o(.text) refers to mb.o(.data) for ucMBAddress
    mb.o(.data) refers to mbfuncother.o(.text) for eMBFuncReportSlaveID
    mb.o(.data) refers to mbfuncinput.o(.text) for eMBFuncReadInputRegister
    mb.o(.data) refers to mbfuncholding.o(.text) for eMBFuncReadHoldingRegister
    mb.o(.data) refers to mbfunccoils.o(.text) for eMBFuncReadCoils
    mb.o(.data) refers to mbfuncdisc.o(.text) for eMBFuncReadDiscreteInputs
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_hd.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing system_stm32f10x.o(.rev16_text), (4 bytes).
    Removing system_stm32f10x.o(.revsh_text), (4 bytes).
    Removing system_stm32f10x.o(.rrx_text), (6 bytes).
    Removing system_stm32f10x.o(.text), (480 bytes).
    Removing system_stm32f10x.o(.data), (20 bytes).
    Removing core_cm3.o(.emb_text), (32 bytes).
    Removing misc.o(.rev16_text), (4 bytes).
    Removing misc.o(.revsh_text), (4 bytes).
    Removing misc.o(.rrx_text), (6 bytes).
    Removing stm32f10x_usart.o(.rev16_text), (4 bytes).
    Removing stm32f10x_usart.o(.revsh_text), (4 bytes).
    Removing stm32f10x_usart.o(.rrx_text), (6 bytes).
    Removing stm32f10x_tim.o(.rev16_text), (4 bytes).
    Removing stm32f10x_tim.o(.revsh_text), (4 bytes).
    Removing stm32f10x_tim.o(.rrx_text), (6 bytes).
    Removing stm32f10x_bkp.o(.rev16_text), (4 bytes).
    Removing stm32f10x_bkp.o(.revsh_text), (4 bytes).
    Removing stm32f10x_bkp.o(.rrx_text), (6 bytes).
    Removing stm32f10x_bkp.o(.text), (196 bytes).
    Removing stm32f10x_rcc.o(.rev16_text), (4 bytes).
    Removing stm32f10x_rcc.o(.revsh_text), (4 bytes).
    Removing stm32f10x_rcc.o(.rrx_text), (6 bytes).
    Removing stm32f10x_gpio.o(.rev16_text), (4 bytes).
    Removing stm32f10x_gpio.o(.revsh_text), (4 bytes).
    Removing stm32f10x_gpio.o(.rrx_text), (6 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(.rrx_text), (6 bytes).
    Removing stm32f10x_it.o(.rev16_text), (4 bytes).
    Removing stm32f10x_it.o(.revsh_text), (4 bytes).
    Removing stm32f10x_it.o(.rrx_text), (6 bytes).
    Removing port.o(.rev16_text), (4 bytes).
    Removing port.o(.revsh_text), (4 bytes).
    Removing port.o(.rrx_text), (6 bytes).
    Removing portserial.o(.rev16_text), (4 bytes).
    Removing portserial.o(.revsh_text), (4 bytes).
    Removing portserial.o(.rrx_text), (6 bytes).
    Removing porttimer.o(.rev16_text), (4 bytes).
    Removing porttimer.o(.revsh_text), (4 bytes).
    Removing porttimer.o(.rrx_text), (6 bytes).

40 unused section(s) (total 896 bytes) removed from the image.

==============================================================================

Memory Map of the image

  Image Entry point : 0x00000000

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x000034bc, Max: 0x00040000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x00000000, Size: 0x00003394, Max: 0x00040000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000130   Data   RO            3    RESET               startup_stm32f10x_hd.o
    0x00000130   0x00000008   Code   RO          639  * !!!main             c_w.l(__main.o)
    0x00000138   0x00000002   Code   RO          668    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0000013a   0x00000000   Code   RO          675    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          677    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          680    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          682    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          684    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          687    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          689    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          691    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          693    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          695    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          697    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          699    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          701    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          703    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          705    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          707    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          711    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          713    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          715    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0000013a   0x00000000   Code   RO          717    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0000013a   0x00000002   Code   RO          718    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x0000013c   0x00000002   Code   RO          738    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0000013e   0x00000000   Code   RO          751    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0000013e   0x00000000   Code   RO          753    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0000013e   0x00000000   Code   RO          756    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0000013e   0x00000000   Code   RO          759    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0000013e   0x00000000   Code   RO          761    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0000013e   0x00000000   Code   RO          764    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0000013e   0x00000002   Code   RO          765    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x00000140   0x00000000   Code   RO          641    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x00000140   0x00000000   Code   RO          645    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x00000140   0x00000006   Code   RO          657    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x00000146   0x00000000   Code   RO          647    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x00000146   0x00000004   Code   RO          648    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x0000014a   0x00000000   Code   RO          650    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x0000014a   0x00000008   Code   RO          651    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x00000152   0x00000002   Code   RO          672    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000154   0x00000000   Code   RO          720    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000154   0x00000004   Code   RO          721    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000158   0x00000006   Code   RO          722    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000015e   0x00000002   PAD
    0x00000160   0x0000004c   Code   RO            4    .text               startup_stm32f10x_hd.o
    0x000001ac   0x000000dc   Code   RO          145    .text               misc.o
    0x00000288   0x00000408   Code   RO          173    .text               stm32f10x_usart.o
    0x00000690   0x00000e1a   Code   RO          197    .text               stm32f10x_tim.o
    0x000014aa   0x00000002   PAD
    0x000014ac   0x000003a4   Code   RO          245    .text               stm32f10x_rcc.o
    0x00001850   0x0000035c   Code   RO          271    .text               stm32f10x_gpio.o
    0x00001bac   0x0000001e   Code   RO          295    .text               main.o
    0x00001bca   0x00000002   PAD
    0x00001bcc   0x00000060   Code   RO          342    .text               stm32f10x_it.o
    0x00001c2c   0x000003d4   Code   RO          366    .text               mbascii.o
    0x00002000   0x000001ae   Code   RO          402    .text               mbfunccoils.o
    0x000021ae   0x000000ac   Code   RO          417    .text               mbfuncdisc.o
    0x0000225a   0x000001f0   Code   RO          429    .text               mbfuncholding.o
    0x0000244a   0x0000008c   Code   RO          441    .text               mbfuncinput.o
    0x000024d6   0x00000002   PAD
    0x000024d8   0x00000094   Code   RO          453    .text               mbfuncother.o
    0x0000256c   0x000000ac   Code   RO          468    .text               mbutils.o
    0x00002618   0x000001c0   Code   RO          483    .text               port.o
    0x000027d8   0x0000003c   Code   RO          513    .text               portevent.o
    0x00002814   0x00000114   Code   RO          530    .text               portserial.o
    0x00002928   0x000000cc   Code   RO          558    .text               porttimer.o
    0x000029f4   0x00000038   Code   RO          579    .text               mbcrc.o
    0x00002a2c   0x000002a4   Code   RO          593    .text               mbrtu.o
    0x00002cd0   0x0000035c   Code   RO          612    .text               mb.o
    0x0000302c   0x0000008a   Code   RO          635    .text               c_w.l(rt_memcpy_v6.o)
    0x000030b6   0x00000006   Code   RO          637    .text               c_w.l(heapauxi.o)
    0x000030bc   0x00000064   Code   RO          642    .text               c_w.l(rt_memcpy_w.o)
    0x00003120   0x0000004a   Code   RO          659    .text               c_w.l(sys_stackheap_outer.o)
    0x0000316a   0x00000012   Code   RO          661    .text               c_w.l(exit.o)
    0x0000317c   0x00000008   Code   RO          669    .text               c_w.l(libspace.o)
    0x00003184   0x0000000c   Code   RO          730    .text               c_w.l(sys_exit.o)
    0x00003190   0x00000002   Code   RO          741    .text               c_w.l(use_no_semi.o)
    0x00003192   0x00000000   Code   RO          743    .text               c_w.l(indicate_semi.o)
    0x00003192   0x00000200   Data   RO          580    .constdata          mbcrc.o
    0x00003392   0x00000002   PAD
    0x00003394   0x00000000   Data   RO          796    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x000008b8, Max: 0x00020000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000014   Data   RW          246    .data               stm32f10x_rcc.o
    0x20000014   0x00000014   Data   RW          367    .data               mbascii.o
    0x20000028   0x00000002   Data   RW          455    .data               mbfuncother.o
    0x2000002a   0x00000030   Data   RW          484    .data               port.o
    0x2000005a   0x00000002   Data   RW          514    .data               portevent.o
    0x2000005c   0x00000008   Data   RW          532    .data               portserial.o
    0x20000064   0x0000000c   Data   RW          595    .data               mbrtu.o
    0x20000070   0x000000b5   Data   RW          613    .data               mb.o
    0x20000125   0x00000003   PAD
    0x20000128   0x00000020   Zero   RW          454    .bss                mbfuncother.o
    0x20000148   0x00000010   Zero   RW          531    .bss                portserial.o
    0x20000158   0x00000100   Zero   RW          594    .bss                mbrtu.o
    0x20000258   0x00000060   Zero   RW          670    .bss                c_w.l(libspace.o)
    0x200002b8   0x00000200   Zero   RW            2    HEAP                startup_stm32f10x_hd.o
    0x200004b8   0x00000400   Zero   RW            1    STACK               startup_stm32f10x_hd.o

